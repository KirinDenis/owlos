// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OWLOSEcosystemService.Data;

namespace OWLOSEcosystemService.Migrations.ThingsDb
{
    [DbContext(typeof(ThingsDbContext))]
    partial class ThingsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("OWLOSEcosystemService.DTO.Things.ThingConnectionPropertiesDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("HTTPEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("HTTPHost")
                        .HasColumnType("longtext");

                    b.Property<uint>("HTTPPort")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("HTTPStatus")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<Guid>("Token")
                        .HasColumnType("char(36)");

                    b.Property<int>("UARTBaudRate")
                        .HasColumnType("int");

                    b.Property<bool>("UARTEnable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UARTPort")
                        .HasColumnType("longtext");

                    b.Property<uint>("UARTStatus")
                        .HasColumnType("int unsigned");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("ThingConnectionProperties");
                });

            modelBuilder.Entity("OWLOSEcosystemService.Models.Things.ThingAirQualityModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ADS1X15")
                        .HasColumnType("tinyint(1)");

                    b.Property<float?>("ADS1X15Light")
                        .HasColumnType("float");

                    b.Property<float?>("ADS1X15MQ135")
                        .HasColumnType("float");

                    b.Property<float?>("ADS1X15MQ7")
                        .HasColumnType("float");

                    b.Property<bool>("BMP280")
                        .HasColumnType("tinyint(1)");

                    b.Property<float?>("BMP280altitude")
                        .HasColumnType("float");

                    b.Property<float?>("BMP280pressure")
                        .HasColumnType("float");

                    b.Property<float?>("BMP280temperature")
                        .HasColumnType("float");

                    b.Property<bool>("CCS811")
                        .HasColumnType("tinyint(1)");

                    b.Property<float?>("CCS811CO2")
                        .HasColumnType("float");

                    b.Property<float?>("CCS811TVOC")
                        .HasColumnType("float");

                    b.Property<float?>("CCS811resistence")
                        .HasColumnType("float");

                    b.Property<float?>("CCS811temp")
                        .HasColumnType("float");

                    b.Property<bool>("DHT22")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("DHT22c")
                        .HasColumnType("tinyint(1)");

                    b.Property<float?>("DHT22heat")
                        .HasColumnType("float");

                    b.Property<float?>("DHT22hum")
                        .HasColumnType("float");

                    b.Property<float?>("DHT22temp")
                        .HasColumnType("float");

                    b.Property<DateTime?>("QueryTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("ThingId")
                        .HasColumnType("int");

                    b.Property<long?>("TickCount")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("ThingAirQuality");
                });
#pragma warning restore 612, 618
        }
    }
}
